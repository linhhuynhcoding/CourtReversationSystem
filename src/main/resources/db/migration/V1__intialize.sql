CREATE SEQUENCE IF NOT EXISTS revinfo_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE accounts
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    name               VARCHAR(255)                            NOT NULL,
    username           VARCHAR(255)                            NOT NULL,
    email              VARCHAR(255)                            NOT NULL,
    password           VARCHAR(255)                            NOT NULL,
    role_id            BIGINT                                  NOT NULL,
    CONSTRAINT pk_accounts PRIMARY KEY (id)
);

CREATE TABLE accounts_aud
(
    rev      INTEGER NOT NULL,
    revtype  SMALLINT,
    id       BIGINT  NOT NULL,
    name     VARCHAR(255),
    username VARCHAR(255),
    email    VARCHAR(255),
    password VARCHAR(255),
    role_id  BIGINT,
    CONSTRAINT pk_accounts_aud PRIMARY KEY (rev, id)
);

CREATE TABLE addresses
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    city               VARCHAR(255),
    district           VARCHAR(255),
    ward               VARCHAR(255),
    address_line       VARCHAR(255),
    latitude           BIGINT,
    longitude          BIGINT,
    CONSTRAINT pk_addresses PRIMARY KEY (id)
);

CREATE TABLE addresses_aud
(
    rev          INTEGER NOT NULL,
    revtype      SMALLINT,
    id           BIGINT  NOT NULL,
    city         VARCHAR(255),
    district     VARCHAR(255),
    ward         VARCHAR(255),
    address_line VARCHAR(255),
    latitude     BIGINT,
    longitude    BIGINT,
    CONSTRAINT pk_addresses_aud PRIMARY KEY (rev, id)
);

CREATE TABLE booking_revenue_stats
(
    orga_id        BIGINT NOT NULL,
    date           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    total_bookings BIGINT,
    total_revenue  DOUBLE PRECISION,
    city           VARCHAR(255),
    CONSTRAINT pk_booking_revenue_stats PRIMARY KEY (orga_id, date)
);

CREATE TABLE bookings
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    order_id           BIGINT,
    orga_id            BIGINT                                  NOT NULL,
    court_id           BIGINT                                  NOT NULL,
    account_id         BIGINT,
    time_start         TIMESTAMP WITH TIME ZONE,
    time_end           TIMESTAMP WITH TIME ZONE,
    status             VARCHAR(255),
    payment_id         BIGINT,
    total              DOUBLE PRECISION,
    is_reminded        BOOLEAN,
    CONSTRAINT pk_bookings PRIMARY KEY (id)
);

CREATE TABLE bookings_aud
(
    rev         INTEGER NOT NULL,
    revtype     SMALLINT,
    id          BIGINT  NOT NULL,
    order_id    BIGINT,
    orga_id     BIGINT,
    court_id    BIGINT,
    account_id  BIGINT,
    time_start  TIMESTAMP WITH TIME ZONE,
    time_end    TIMESTAMP WITH TIME ZONE,
    status      VARCHAR(255),
    payment_id  BIGINT,
    total       DOUBLE PRECISION,
    is_reminded BOOLEAN,
    CONSTRAINT pk_bookings_aud PRIMARY KEY (rev, id)
);

CREATE TABLE cart_items
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    cart_id            BIGINT                                  NOT NULL,
    product_id         BIGINT                                  NOT NULL,
    price              DOUBLE PRECISION,
    quantity           INTEGER,
    selected           BOOLEAN,
    CONSTRAINT pk_cart_items PRIMARY KEY (id)
);

CREATE TABLE cart_items_aud
(
    rev        INTEGER NOT NULL,
    revtype    SMALLINT,
    id         BIGINT  NOT NULL,
    cart_id    BIGINT,
    product_id BIGINT,
    price      DOUBLE PRECISION,
    quantity   INTEGER,
    selected   BOOLEAN,
    CONSTRAINT pk_cart_items_aud PRIMARY KEY (rev, id)
);

CREATE TABLE carts
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    account_id         BIGINT,
    total_price        DOUBLE PRECISION,
    CONSTRAINT pk_carts PRIMARY KEY (id)
);

CREATE TABLE carts_aud
(
    rev         INTEGER NOT NULL,
    revtype     SMALLINT,
    id          BIGINT  NOT NULL,
    account_id  BIGINT,
    total_price DOUBLE PRECISION,
    CONSTRAINT pk_carts_aud PRIMARY KEY (rev, id)
);

CREATE TABLE categories
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    name               VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE categories_aud
(
    rev     INTEGER NOT NULL,
    revtype SMALLINT,
    id      BIGINT  NOT NULL,
    name    VARCHAR(255),
    CONSTRAINT pk_categories_aud PRIMARY KEY (rev, id)
);

CREATE TABLE court_status
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    orga_id BIGINT,
    date    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_court_status PRIMARY KEY (id)
);

CREATE TABLE court_status_aud
(
    rev     INTEGER NOT NULL,
    revtype SMALLINT,
    id      BIGINT  NOT NULL,
    orga_id BIGINT,
    date    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_court_status_aud PRIMARY KEY (rev, id)
);

CREATE TABLE courts
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    name               VARCHAR(255),
    orga_id            BIGINT,
    CONSTRAINT pk_courts PRIMARY KEY (id)
);

CREATE TABLE courts_aud
(
    rev     INTEGER NOT NULL,
    revtype SMALLINT,
    id      BIGINT  NOT NULL,
    name    VARCHAR(255),
    orga_id BIGINT,
    CONSTRAINT pk_courts_aud PRIMARY KEY (rev, id)
);

CREATE TABLE customer_stats
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    orga_id             BIGINT,
    new_customers       INTEGER,
    returning_customers INTEGER,
    city                VARCHAR(255),
    date                TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_customer_stats PRIMARY KEY (id)
);

CREATE TABLE image_courts
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    image_id           BIGINT,
    court_id           BIGINT,
    CONSTRAINT pk_image_courts PRIMARY KEY (id)
);

CREATE TABLE image_courts_aud
(
    rev      INTEGER NOT NULL,
    revtype  SMALLINT,
    id       BIGINT  NOT NULL,
    image_id BIGINT,
    court_id BIGINT,
    CONSTRAINT pk_image_courts_aud PRIMARY KEY (rev, id)
);

CREATE TABLE images
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    image_url          VARCHAR(500)                            NOT NULL,
    width              INTEGER                                 NOT NULL,
    height             INTEGER                                 NOT NULL,
    status             SMALLINT                                NOT NULL,
    type               SMALLINT                                NOT NULL,
    CONSTRAINT pk_images PRIMARY KEY (id)
);

CREATE TABLE images_aud
(
    rev       INTEGER NOT NULL,
    revtype   SMALLINT,
    id        BIGINT  NOT NULL,
    image_url VARCHAR(500),
    width     INTEGER,
    height    INTEGER,
    status    SMALLINT,
    type      SMALLINT,
    CONSTRAINT pk_images_aud PRIMARY KEY (rev, id)
);

CREATE TABLE manager
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    account_id         BIGINT,
    court_id           BIGINT,
    CONSTRAINT pk_manager PRIMARY KEY (id)
);

CREATE TABLE manager_aud
(
    rev        INTEGER NOT NULL,
    revtype    SMALLINT,
    id         BIGINT  NOT NULL,
    account_id BIGINT,
    court_id   BIGINT,
    CONSTRAINT pk_manager_aud PRIMARY KEY (rev, id)
);

CREATE TABLE notification
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    title              VARCHAR(255),
    message            VARCHAR(255),
    sender_id          BIGINT,
    sender_type        VARCHAR(255),
    recipient_id       BIGINT,
    noti_type          VARCHAR(255),
    sent_time          TIMESTAMP WITHOUT TIME ZONE,
    role               VARCHAR(255),
    recipient_type     VARCHAR(255),
    is_seen            BOOLEAN,
    CONSTRAINT pk_notification PRIMARY KEY (id)
);

CREATE TABLE notification_aud
(
    rev            INTEGER NOT NULL,
    revtype        SMALLINT,
    id             BIGINT  NOT NULL,
    title          VARCHAR(255),
    message        VARCHAR(255),
    sender_id      BIGINT,
    sender_type    VARCHAR(255),
    recipient_id   BIGINT,
    noti_type      VARCHAR(255),
    sent_time      TIMESTAMP WITHOUT TIME ZONE,
    role           VARCHAR(255),
    recipient_type VARCHAR(255),
    is_seen        BOOLEAN,
    CONSTRAINT pk_notification_aud PRIMARY KEY (rev, id)
);

CREATE TABLE order_items
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    order_id           BIGINT,
    product_id         BIGINT                                  NOT NULL,
    quantity           INTEGER                                 NOT NULL,
    unit_price         DOUBLE PRECISION                        NOT NULL,
    total_price        DOUBLE PRECISION                        NOT NULL,
    CONSTRAINT pk_order_items PRIMARY KEY (id)
);

CREATE TABLE order_items_aud
(
    rev         INTEGER NOT NULL,
    revtype     SMALLINT,
    id          BIGINT  NOT NULL,
    order_id    BIGINT,
    product_id  BIGINT,
    quantity    INTEGER,
    unit_price  DOUBLE PRECISION,
    total_price DOUBLE PRECISION,
    CONSTRAINT pk_order_items_aud PRIMARY KEY (rev, id)
);

CREATE TABLE orders
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    account_id         BIGINT,
    order_type         VARCHAR(255),
    total              DOUBLE PRECISION,
    product_price      DOUBLE PRECISION,
    payment_id         BIGINT,
    address_id         BIGINT,
    ship_fee           DOUBLE PRECISION,
    status             SMALLINT,
    CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE orders_aud
(
    rev           INTEGER NOT NULL,
    revtype       SMALLINT,
    id            BIGINT  NOT NULL,
    account_id    BIGINT,
    order_type    VARCHAR(255),
    total         DOUBLE PRECISION,
    product_price DOUBLE PRECISION,
    payment_id    BIGINT,
    address_id    BIGINT,
    ship_fee      DOUBLE PRECISION,
    status        SMALLINT,
    CONSTRAINT pk_orders_aud PRIMARY KEY (rev, id)
);

CREATE TABLE organisations
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    name               VARCHAR(255)                            NOT NULL,
    phone              VARCHAR(255),
    number_of_courts   BIGINT,
    price              DOUBLE PRECISION,
    address_id         BIGINT,
    status             VARCHAR(255),
    CONSTRAINT pk_organisations PRIMARY KEY (id)
);

CREATE TABLE organisations_aud
(
    rev              INTEGER NOT NULL,
    revtype          SMALLINT,
    id               BIGINT  NOT NULL,
    name             VARCHAR(255),
    phone            VARCHAR(255),
    number_of_courts BIGINT,
    price            DOUBLE PRECISION,
    address_id       BIGINT,
    status           VARCHAR(255),
    CONSTRAINT pk_organisations_aud PRIMARY KEY (rev, id)
);

CREATE TABLE payments
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    amount             DOUBLE PRECISION,
    status             VARCHAR(255),
    method_id          SMALLINT,
    CONSTRAINT pk_payments PRIMARY KEY (id)
);

CREATE TABLE payments_aud
(
    rev       INTEGER NOT NULL,
    revtype   SMALLINT,
    id        BIGINT  NOT NULL,
    amount    DOUBLE PRECISION,
    status    VARCHAR(255),
    method_id SMALLINT,
    CONSTRAINT pk_payments_aud PRIMARY KEY (rev, id)
);

CREATE TABLE permissions
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    code               VARCHAR(255),
    CONSTRAINT pk_permissions PRIMARY KEY (id)
);

CREATE TABLE permissions_aud
(
    rev     INTEGER NOT NULL,
    revtype SMALLINT,
    id      BIGINT  NOT NULL,
    code    VARCHAR(255),
    CONSTRAINT pk_permissions_aud PRIMARY KEY (rev, id)
);

CREATE TABLE products
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    name               VARCHAR(255)                            NOT NULL,
    price              DOUBLE PRECISION                        NOT NULL,
    buy_turn           BIGINT                                  NOT NULL,
    stock              BIGINT                                  NOT NULL,
    category_id        BIGINT,
    image_id           BIGINT,
    CONSTRAINT pk_products PRIMARY KEY (id)
);

CREATE TABLE products_aud
(
    rev         INTEGER NOT NULL,
    revtype     SMALLINT,
    id          BIGINT  NOT NULL,
    name        VARCHAR(255),
    price       DOUBLE PRECISION,
    buy_turn    BIGINT,
    stock       BIGINT,
    category_id BIGINT,
    image_id    BIGINT,
    CONSTRAINT pk_products_aud PRIMARY KEY (rev, id)
);

CREATE TABLE revinfo
(
    rev      INTEGER NOT NULL,
    revtstmp BIGINT,
    CONSTRAINT pk_revinfo PRIMARY KEY (rev)
);

CREATE TABLE roles
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    role               VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE roles_aud
(
    rev     INTEGER NOT NULL,
    revtype SMALLINT,
    id      BIGINT  NOT NULL,
    role    VARCHAR(255),
    CONSTRAINT pk_roles_aud PRIMARY KEY (rev, id)
);

CREATE TABLE support_channels
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    name               VARCHAR(255),
    description        VARCHAR(255),
    CONSTRAINT pk_support_channels PRIMARY KEY (id)
);

CREATE TABLE support_messages
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    sender_type        VARCHAR(255),
    sender_id          BIGINT,
    request_id         BIGINT,
    message            TEXT,
    CONSTRAINT pk_support_messages PRIMARY KEY (id)
);

CREATE TABLE support_requests
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_date       TIMESTAMP WITHOUT TIME ZONE,
    last_modified_date TIMESTAMP WITHOUT TIME ZONE,
    subject            VARCHAR(255),
    status             VARCHAR(255),
    account_id         BIGINT,
    channel_id         BIGINT,
    created_at         TIMESTAMP WITHOUT TIME ZONE,
    updated_at         TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_support_requests PRIMARY KEY (id)
);

CREATE TABLE usage_stats
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    orga_id               BIGINT,
    total_booking_times   DOUBLE PRECISION,
    total_available_times DOUBLE PRECISION,
    usage_rate            DOUBLE PRECISION,
    date                  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_usage_stats PRIMARY KEY (id)
);

ALTER TABLE bookings
    ADD CONSTRAINT uc_bookings_order UNIQUE (order_id);

ALTER TABLE bookings
    ADD CONSTRAINT uc_bookings_payment UNIQUE (payment_id);

ALTER TABLE carts
    ADD CONSTRAINT uc_carts_account UNIQUE (account_id);

ALTER TABLE image_courts
    ADD CONSTRAINT uc_image_courts_image UNIQUE (image_id);

ALTER TABLE manager
    ADD CONSTRAINT uc_manager_account UNIQUE (account_id);

ALTER TABLE manager
    ADD CONSTRAINT uc_manager_court UNIQUE (court_id);

ALTER TABLE orders
    ADD CONSTRAINT uc_orders_address UNIQUE (address_id);

ALTER TABLE orders
    ADD CONSTRAINT uc_orders_payment UNIQUE (payment_id);

ALTER TABLE organisations
    ADD CONSTRAINT uc_organisations_address UNIQUE (address_id);

ALTER TABLE products
    ADD CONSTRAINT uc_products_image UNIQUE (image_id);

CREATE UNIQUE INDEX index_accounts_username ON accounts (username);

ALTER TABLE accounts_aud
    ADD CONSTRAINT FK_ACCOUNTS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE accounts
    ADD CONSTRAINT FK_ACCOUNTS_ON_ROLE FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE addresses_aud
    ADD CONSTRAINT FK_ADDRESSES_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE bookings_aud
    ADD CONSTRAINT FK_BOOKINGS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_COURT FOREIGN KEY (court_id) REFERENCES courts (id);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_ORGA FOREIGN KEY (orga_id) REFERENCES organisations (id);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_PAYMENT FOREIGN KEY (payment_id) REFERENCES payments (id);

ALTER TABLE booking_revenue_stats
    ADD CONSTRAINT FK_BOOKING_REVENUE_STATS_ON_ORGA FOREIGN KEY (orga_id) REFERENCES organisations (id);

ALTER TABLE carts_aud
    ADD CONSTRAINT FK_CARTS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE carts
    ADD CONSTRAINT FK_CARTS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE cart_items_aud
    ADD CONSTRAINT FK_CART_ITEMS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE cart_items
    ADD CONSTRAINT FK_CART_ITEMS_ON_CART FOREIGN KEY (cart_id) REFERENCES carts (id);

ALTER TABLE cart_items
    ADD CONSTRAINT FK_CART_ITEMS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE categories_aud
    ADD CONSTRAINT FK_CATEGORIES_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE courts_aud
    ADD CONSTRAINT FK_COURTS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE courts
    ADD CONSTRAINT FK_COURTS_ON_ORGA FOREIGN KEY (orga_id) REFERENCES organisations (id);

ALTER TABLE court_status_aud
    ADD CONSTRAINT FK_COURT_STATUS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE court_status
    ADD CONSTRAINT FK_COURT_STATUS_ON_ORGA FOREIGN KEY (orga_id) REFERENCES organisations (id);

ALTER TABLE customer_stats
    ADD CONSTRAINT FK_CUSTOMER_STATS_ON_ORGA FOREIGN KEY (orga_id) REFERENCES organisations (id);

ALTER TABLE images_aud
    ADD CONSTRAINT FK_IMAGES_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE image_courts_aud
    ADD CONSTRAINT FK_IMAGE_COURTS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE image_courts
    ADD CONSTRAINT FK_IMAGE_COURTS_ON_COURT FOREIGN KEY (court_id) REFERENCES organisations (id);

ALTER TABLE image_courts
    ADD CONSTRAINT FK_IMAGE_COURTS_ON_IMAGE FOREIGN KEY (image_id) REFERENCES images (id);

ALTER TABLE manager_aud
    ADD CONSTRAINT FK_MANAGER_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE manager
    ADD CONSTRAINT FK_MANAGER_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE manager
    ADD CONSTRAINT FK_MANAGER_ON_COURT FOREIGN KEY (court_id) REFERENCES organisations (id);

ALTER TABLE notification_aud
    ADD CONSTRAINT FK_NOTIFICATION_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE notification
    ADD CONSTRAINT FK_NOTIFICATION_ON_RECIPIENT FOREIGN KEY (recipient_id) REFERENCES accounts (id);

ALTER TABLE orders_aud
    ADD CONSTRAINT FK_ORDERS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE orders
    ADD CONSTRAINT FK_ORDERS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE orders
    ADD CONSTRAINT FK_ORDERS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES addresses (id);

ALTER TABLE orders
    ADD CONSTRAINT FK_ORDERS_ON_PAYMENT FOREIGN KEY (payment_id) REFERENCES payments (id);

ALTER TABLE order_items_aud
    ADD CONSTRAINT FK_ORDER_ITEMS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE order_items
    ADD CONSTRAINT FK_ORDER_ITEMS_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE order_items
    ADD CONSTRAINT FK_ORDER_ITEMS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE organisations_aud
    ADD CONSTRAINT FK_ORGANISATIONS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE organisations
    ADD CONSTRAINT FK_ORGANISATIONS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES addresses (id);

ALTER TABLE payments_aud
    ADD CONSTRAINT FK_PAYMENTS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE permissions_aud
    ADD CONSTRAINT FK_PERMISSIONS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE products_aud
    ADD CONSTRAINT FK_PRODUCTS_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE products
    ADD CONSTRAINT FK_PRODUCTS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id);

ALTER TABLE products
    ADD CONSTRAINT FK_PRODUCTS_ON_IMAGE FOREIGN KEY (image_id) REFERENCES images (id);

ALTER TABLE roles_aud
    ADD CONSTRAINT FK_ROLES_AUD_ON_REV FOREIGN KEY (rev) REFERENCES revinfo (rev);

ALTER TABLE support_messages
    ADD CONSTRAINT FK_SUPPORT_MESSAGES_ON_REQUEST FOREIGN KEY (request_id) REFERENCES support_requests (id);

ALTER TABLE support_requests
    ADD CONSTRAINT FK_SUPPORT_REQUESTS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE support_requests
    ADD CONSTRAINT FK_SUPPORT_REQUESTS_ON_CHANNEL FOREIGN KEY (channel_id) REFERENCES support_channels (id);

ALTER TABLE usage_stats
    ADD CONSTRAINT FK_USAGE_STATS_ON_ORGA FOREIGN KEY (orga_id) REFERENCES organisations (id);